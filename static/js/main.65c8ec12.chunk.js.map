{"version":3,"sources":["reducers/dashboard.jsx","constants/index.jsx","reducers/root.jsx","store.jsx","actions/dashboard.jsx","selectors/dashboard.jsx","modal/index.jsx","containers/widgets.jsx","containers/AddItem.jsx","App.js","serviceWorker.js","index.js"],"names":["fromLocalStorage","JSON","parse","localStorage","getItem","items","map","item","Object","objectSpread","y","Infinity","err","i","x","w","h","widgetChoice","values","logo","text","url","newCounter","className","cols","lg","md","sm","xs","xxs","rowHeight","setItem","initialState","actionHandlers","_actionHandlers","defineProperty","state","_ref","payload","newState","toConsumableArray","concat","stringify","_ref2","filter","_ref3","layout","index","_layout$index","dashboard","arguments","length","undefined","action","actionHandler","type","root","history","combineReducers","router","connectRouter","form","formReducer","createBrowserHistory","addWidget","removeWidget","updateLayout","getDashboard","ClickableModal","_this$props","this","props","title","children","react_default","a","createElement","styled_bootstrap_components_lib","style","color","PureComponent","WidgetChoiceStyle","styled","div","_templateObject","Widget","_this$props$input","input","value","onChange","widgetsJSON","widgets","id","event","arr","target","checked","push","splice","indexOf","includes","htmlFor","backgroundImage","Component","PropTypes","number","array","func","object","ButtonContainer","AddItem_templateObject","RadioContainer","_templateObject2","renderField","field","renderWidgetChoice","_field$input","_field$input$value","defaultChecked","v","Fragment","justifyContent","name","onClick","Field","component","Widgets","AddWidget","choiceAWidgets","forEach","widget","find","_this","handleSubmit","fluid","e","console","log","primary","onAdd","Link","to","margin","defaultProps","connect","initialValues","dispatch","bindActionCreators","reduxForm","withRouter","TheatreMode","document","referrer","match","library","add","faMinusCircle","faArrowsAlt","faEdit","string","ResponsiveGridLayout","WidthProvider","Responsive","Cell","App_templateObject","RemoveBtn","span","App_templateObject2","_templateObject3","editMode","_ref4","AppDiv","_templateObject4","_ref5","_ref6","showModal","addItem","modal_ClickableModal","AddItem","WidgetCardStyle","_templateObject5","_ref7","_ref8","WidgetCard","_ref9","href","width","height","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_this2","show","Modal","isResizable","isDraggable","onLayoutChange","breakpoints","el","key","data-grid","bsStyle","background","App_WidgetCard","assign","onRemove","react_fontawesome_index_es","icon","size","backgroundColor","padding","App_ButtonContainer","setState","Boolean","window","location","hostname","ReactDOM","render","es","store","createStore","rootReducer","compose","applyMiddleware","routerMiddleware","thunk","lib","Switch","Route","exact","path","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.65c8ec12.chunk.js","sourcesContent":["import { ADD_WIDGET, REMOVE_WIDGET, UPDATE_LAYOUT } from '../constants';\n\nlet fromLocalStorage = {\n};\ntry {\n  fromLocalStorage = JSON.parse(localStorage.getItem('dashboard'));\n  fromLocalStorage.items = fromLocalStorage.items.map(item => ({\n    ...item,\n    y: item.y === null ? Infinity : item.y,\n  }));\n} catch (err) {\n  fromLocalStorage = {\n    items: [{\n      i: 'Netflix', x: 0, y: 0, w: 2, h: 2, widgetChoice: 'choiceA', values: { logo: '//teslascreen.navto.net/netflix.jpg', text: 'Netflix', url: 'https://netflix.com' },\n    }, {\n      i: 'The Roku Channel', x: 2, y: 0, w: 2, h: 2, widgetChoice: 'choiceA', values: { logo: '//teslascreen.navto.net/trc.png', text: 'The Roku Channel', url: 'https://therokuchannel.roku.com' },\n    }, {\n      i: 'Pluto.Tv', x: 4, y: 0, w: 2, h: 2, widgetChoice: 'choiceA', values: { logo: '//teslascreen.navto.net/pluto.gif', text: 'Pluto.Tv', url: 'http://pluto.tv' },\n    }, {\n      i: 'Tubi.Tv', x: 0, y: 2, w: 2, h: 2, widgetChoice: 'choiceA', values: { logo: '//teslascreen.navto.net/tubitv.gif', text: 'Tubi.Tv', url: 'http://tubitv.com' },\n    }, {\n      i: 'Disney+', x: 2, y: 2, w: 2, h: 2, widgetChoice: 'choiceA', values: { logo: '//teslascreen.navto.net/disney.jpg', text: 'Disney+', url: 'https://www.disneyplus.com' },\n    }, {\n      i: 'PLEX', x: 4, y: 2, w: 2, h: 2, widgetChoice: 'choiceA', values: { logo: '//teslascreen.navto.net/plex.gif', text: 'PLEX', url: 'http://app.plex.tv' },\n    }, {\n      i: 'PBS Kids', x: 0, y: 4, w: 2, h: 2, widgetChoice: 'choiceA', values: { logo: '//cms-tc.pbskids.org/nationalvideoplayer/resources/img/pbs-kids-logo.svg', text: 'PBS Kids', url: 'https://pbskids.org/video' },\n    }, {\n      i: 'CW TV', x: 2, y: 4, w: 2, h: 2, widgetChoice: 'choiceA', values: { logo: '//upload.wikimedia.org/wikipedia/commons/c/c3/The_CW_%282%29.svg', text: 'CW TV', url: 'https://www.cwtv.com' },\n    }, {\n      i: 'Popcornflix', x: 4, y: 4, w: 2, h: 2, widgetChoice: 'choiceA', values: { logo: '//media.unreel.me/prod/popcornflix/about/328cd93f-fb87-4e7d-a964-e9d46510c8aa', text: 'Popcornflix', url: 'https://www.popcornflix.com' },\n    }, {\n      i: 'Google', x: 6, y: 0, w: 2, h: 2, widgetChoice: 'choiceA', values: { logo: '//www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png', text: 'Google', url: 'https://google.com' },\n    }, {\n      i: 'Facebook', x: 6, y: 2, w: 2, h: 2, widgetChoice: 'choiceA', values: { logo: '//upload.wikimedia.org/wikipedia/commons/c/c2/F_icon.svg', text: 'Facebook', url: 'https://facebook.com' },\n    }, {\n      i: 'Hulu', x: 6, y: 4, w: 2, h: 2, widgetChoice: 'choiceA', values: { logo: '//teslascreen.navto.net/hulu.jpg', text: 'Hulu', url: 'https://www.hulu.com' },\n    }, {\n      i: 'n38',\n      x: 8,\n      y: 0,\n      w: 2,\n      h: 6,\n      widgetChoice: 'choiceB',\n      values: {\n        widgetChoice: 'choiceB', text: 'Random Picture', logo: 'https://source.unsplash.com/random', url: '#',\n      },\n    }],\n    newCounter: 39,\n    className: 'layout',\n    cols: {\n      lg: 12, md: 10, sm: 6, xs: 4, xxs: 2,\n    },\n    rowHeight: 100,\n  };\n  localStorage.setItem('dashboard', fromLocalStorage);\n  //\n}\n\nconst initialState = {\n  items: [],\n  newCounter: 0,\n  className: 'layout',\n  cols: {\n    lg: 12, md: 10, sm: 6, xs: 4, xxs: 2,\n  },\n  rowHeight: 100,\n  ...fromLocalStorage,\n};\nconst actionHandlers = {\n  [ADD_WIDGET]: (state, { payload }) => {\n    const { items, newCounter } = state;\n    const newState = {\n      ...state,\n      items: [...items, payload],\n      newCounter: newCounter + 1,\n    };\n    localStorage.setItem('dashboard', JSON.stringify(newState));\n    return newState;\n  },\n  [REMOVE_WIDGET]: (state, { payload: i }) => {\n    const { items } = state;\n    const newState = {\n      ...state,\n      items: items.filter(item => item.i !== i),\n    };\n    localStorage.setItem('dashboard', JSON.stringify(newState));\n    return newState;\n  },\n  [UPDATE_LAYOUT]: (state, { layout }) => {\n    const { items } = state;\n    const newState = {\n      ...state,\n      items: items.map((item, index) => {\n        const {\n          x, y, w, h,\n        } = layout[index];\n        return {\n          ...item,\n          x,\n          y,\n          w,\n          h,\n        };\n      }),\n    };\n    localStorage.setItem('dashboard', JSON.stringify(newState));\n    return newState;\n  },\n};\n\nexport default (state = initialState, action) => {\n  const actionHandler = actionHandlers[action.type];\n  if (actionHandler) {\n    return actionHandler(state, action);\n  }\n  return state;\n};\n","export const ADD_WIDGET = 'ADD_WIDGET';\nexport const REMOVE_WIDGET = 'REMOVE_WIDGET';\nexport const UPDATE_LAYOUT = 'UPDATE_LAYOUT';\n","\nimport { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport { reducer as formReducer } from 'redux-form';\n\nimport dashboard from './dashboard';\n\n\nexport default history => combineReducers({\n  router: connectRouter(history),\n  dashboard,\n  form: formReducer,\n});\n","import thunk from 'redux-thunk';\nimport { createBrowserHistory } from 'history';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport rootReducer from './reducers/root';\n\nexport const history = createBrowserHistory();\n\nconst initialState = {};\nexport default function configureStore() {\n  return createStore(\n    rootReducer(history),\n    initialState,\n    compose(\n      applyMiddleware(\n        routerMiddleware(history), // for dispatching history actions\n        thunk,\n      ),\n    ),\n  );\n}\n","import { ADD_WIDGET, REMOVE_WIDGET, UPDATE_LAYOUT } from '../constants';\n\nexport const addWidget = payload => ({\n  type: ADD_WIDGET,\n  payload,\n});\n\nexport const removeWidget = payload => ({\n  type: REMOVE_WIDGET,\n  payload,\n});\n\nexport const updateLayout = layout => ({\n  type: UPDATE_LAYOUT,\n  layout,\n});\n","// import { createSelector } from 'reselect';\n\nexport const getDashboard = state => state.dashboard;\nexport default getDashboard;\n","import React, { PureComponent } from 'react';\nimport {\n  Modal,\n  ModalDialog,\n  ModalContent,\n  ModalBody,\n  // ModalFooter,\n  ModalHeader,\n  ModalTitle,\n  // Button,\n  Container,\n} from 'styled-bootstrap-components';\n\nexport default class ClickableModal extends PureComponent {\n  render() {\n    const { title, children } = this.props;\n    return (\n      <Container>\n        <Modal>\n          <ModalDialog>\n            <ModalContent>\n              <ModalHeader>\n                <ModalTitle style={{ color: 'black' }}>\n                  {title}\n                </ModalTitle>\n                {/*\n                <Button outline onClick={() => this.handleModal()}>\n                  <span aria-hidden=\"true\">&times;</span>\n                </Button>\n                */}\n              </ModalHeader>\n              <ModalBody>\n                {children}\n              </ModalBody>\n              {/*\n              <ModalFooter>\n                <Button onClick={() => this.handleModal()}>\n                  Close\n                </Button>\n              </ModalFooter>\n              */}\n            </ModalContent>\n          </ModalDialog>\n        </Modal>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport {\n  FormCheck,\n  FormCheckInput,\n} from 'styled-bootstrap-components';\nimport widgetsJSON from './widgets.json';\n\nconst WidgetChoiceStyle = styled.div`\n    & label > div {\n        display: flex;\n        align-items: center;\n        .imgContainer  {\n            width: 10vw;\n            height: 10vh;\n            background-size: contain;\n            background-repeat: no-repeat;\n            background-position: 50% 50%;\n            background-color: black;\n            img {\n                width: 100%;\n            }\n        }\n        .text {\n            margin-left: 10px;\n        }\n    }\n    & label > div:nth-of-type(odd) { \n        background: rgba(0,0,0,.2); \n        margin: 20px 0px;\n    } \n    & label > div:nth-of-type(even) { \n        background: rgba(0,0,0,.05); \n        margin: 20px 0px;\n    } \n    & input[type=\"checkbox\"] {\n        opacity: 0;\n        position: fixed;\n        width: 0;\n      \n      }\n    & input[type=\"checkbox\"]:checked + label {\n        background-color:rgba(0,0,255,.3);\n        background-color: #007bff;\n        border-color: #007bff;\n        color: white;\n      \n      }\n    & input[type=\"checkbox\"]:checked + label > div {\n        background-color:rgba(0,0,255,.3);\n        background-color: #007bff;\n        border-color: #007bff;\n        border-width: 5px;\n        border-style: solid;\n        color: white;\n      \n    }\n`;\nexport default class Widget extends Component {\n  render() {\n    const { input: { value, onChange } } = this.props;\n    return (\n      <WidgetChoiceStyle>\n        {widgetsJSON.widgets.map(({ logo, text, url }) => (\n          <FormCheck>\n            <FormCheckInput\n              type=\"checkbox\"\n              id={text}\n              onChange={(event) => {\n                const arr = [...value];\n                if (event.target.checked) {\n                  arr.push(text);\n                } else {\n                  arr.splice(arr.indexOf(text), 1);\n                }\n                return onChange(arr);\n              }}\n              checked={value.includes(text)}\n\n            />\n            <label htmlFor={text}>\n              <div>\n                <div className=\"imgContainer\" style={{ backgroundImage: `url(\"${logo}\")` }} />\n                <div className=\"text\">\n                  {text}\n                </div>\n              </div>\n            </label>\n          </FormCheck>\n        ))}\n      </WidgetChoiceStyle>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  FormGroup,\n  // FormText,\n  FormInline,\n  FormCheck,\n  FormCheckInput,\n  Label,\n  FormControl,\n  Container,\n  Button,\n} from 'styled-bootstrap-components';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {\n  withRouter, Link,\n} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Field, reduxForm } from 'redux-form';\n// import * as widgets from '../widgets';\nimport { addWidget } from '../actions/dashboard';\nimport { getDashboard } from '../selectors/dashboard';\n// import SelectField from '../form/SelectField';\nimport Widgets from './widgets.jsx';\nimport widgetsJSON from './widgets.json';\n\n\nconst {\n  number, array, func, object,\n} = PropTypes;\n\nconst ButtonContainer = styled.div`\n  &div {\n    margin: 10px;\n  }\n`;\nconst RadioContainer = styled.div`\n& input[type=\"radio\"] {\n  opacity: 0;\n  position: fixed;\n  width: 0;\n\n}\n& input[type=\"radio\"] + label {\n  padding: 10px;\n}\n\n& input[type=\"radio\"]:checked + label {\n  background-color:rgba(0,0,255,.3);\n  background-color: #007bff;\n  border-color: #007bff;\n  color: white;\n\n}\n& form > div {\n  margin: 10px 0px;\n}\n`;\nconst renderField = field => (\n  <div className=\"input-row\">\n    <FormControl\n\n      {...field.input}\n    />\n\n  </div>\n);\n\nconst renderWidgetChoice = (field) => {\n  const { input: { value = 'choiceB', onChange }, defaultChecked } = field;\n  const v = value || defaultChecked;\n  return (\n    <>\n      <RadioContainer>\n        <FormInline style={{ color: 'black', justifyContent: 'space-around' }}>\n          <FormGroup>\n            <FormCheck>\n              <FormCheckInput\n                id=\"choiceA\"\n                type=\"radio\"\n                name=\"selectType\"\n                onClick={() => {\n                  onChange('choiceA');\n                }}\n                checked={v === 'choiceA'}\n              />\n              <label htmlFor=\"choiceA\">Choose A Widget</label>\n            </FormCheck>\n          </FormGroup>\n          <FormGroup>\n            <FormCheck>\n              <FormCheckInput\n                id=\"choiceB\"\n                type=\"radio\"\n                name=\"selectType\"\n                checked={v === 'choiceB'}\n                onClick={() => {\n                  onChange('choiceB');\n                }}\n              />\n              <label htmlFor=\"choiceB\">Custom Widget</label>\n            </FormCheck>\n          </FormGroup>\n        </FormInline>\n      </RadioContainer>\n      { value === 'choiceB' && <>\n        <FormGroup>\n          <Label>Name</Label>\n          <Field name=\"text\" component={renderField} type=\"text\" />\n        </FormGroup>\n        <FormGroup>\n          <Label>Logo</Label>\n          <Field name=\"logo\" component={renderField} type=\"text\" />\n        </FormGroup>\n        <FormGroup>\n          <Label>URL</Label>\n          <Field name=\"url\" component={renderField} type=\"text\" />\n        </FormGroup>\n          </>}\n      {value === 'choiceA' && <>        <Field name=\"choiceAWidgets\" component={Widgets} type=\"checkbox\" /></>}\n          </>\n\n  );\n};\n// const widgetTypes = Object.keys(widgets);\nclass AddWidget extends Component {\n  static defaultProps = {\n\n  };\n\n  onAdd(values) {\n    // TODO: show modal?c\n\n    const { widgetChoice, choiceAWidgets } = values;\n    const {\n      newCounter, items, addWidget, history,\n    } = this.props;\n    if (widgetChoice === 'choiceA') {\n      choiceAWidgets.forEach((widget) => {\n        addWidget({\n          i: `${widget}`,\n          x: (items.length * 2) % (12),\n          y: Infinity, // puts it at the bottom\n          w: 2,\n          h: 2,\n          widgetChoice,\n          values: widgetsJSON.widgets.find(({ text }) => text === widget),\n        });\n      });\n    } else {\n      addWidget({\n        i: `n${newCounter}`,\n        x: (items.length * 2) % (12),\n        y: Infinity, // puts it at the bottom\n        w: 2,\n        h: 2,\n        widgetChoice,\n        values,\n      });\n    }\n\n    history.push('/');\n  }\n\n\n  render() {\n    const { handleSubmit } = this.props;\n    return (\n      <Container fluid style={{ color: 'black' }}>\n        {/*\n        <FormGroup>\n          <Label>Widget Type</Label>\n          <Field\n            name=\"widgetType\"\n            component={SelectField}\n            options={[\n              'Select Type',\n              ...widgetTypes,\n            ]}\n          />\n        </FormGroup>\n        */}\n        <Field name=\"widgetChoice\" component={renderWidgetChoice} onChange={e => console.log(e)} />\n\n        <ButtonContainer>\n          <Button primary onClick={handleSubmit(values => this.onAdd(values))}>Add</Button>\n          <Link to=\"/\">\n            <Button primary style={{ margin: 10 }}>Cancel</Button>\n          </Link>\n        </ButtonContainer>\n\n      </Container>\n    );\n  }\n}\n\nAddWidget.propTypes = {\n  newCounter: number.isRequired,\n  items: array.isRequired,\n  addWidget: func.isRequired,\n  handleSubmit: func.isRequired,\n  history: object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  ...getDashboard(state),\n  initialValues: {\n    widgetChoice: 'choiceA',\n  },\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  addWidget,\n}, dispatch);\nexport default connect(mapStateToProps, mapDispatchToProps)(reduxForm({\n  form: 'addWidget',\n})(withRouter(AddWidget)));\n","import { Responsive, WidthProvider } from 'react-grid-layout';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport React, { PureComponent } from 'react';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMinusCircle, faArrowsAlt, faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\n\nimport {\n  Card,\n  CardBody,\n  // CardFooter,\n  // CardHeader,\n  // CardImageHeader,\n  // CardText,\n  CardTitle,\n  Button,\n  Container,\n} from 'styled-bootstrap-components';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { removeWidget, updateLayout } from './actions/dashboard';\nimport './App.css';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport { getDashboard } from './selectors/dashboard';\nimport Modal from './modal';\nimport AddItem from './containers/AddItem';\n\nlet TheatreMode = false;\n\nif (document.referrer.match(/^https:\\/\\/www\\.youtube\\.com/)) {\n  TheatreMode = true;\n}\n\nlibrary.add(faMinusCircle);\nlibrary.add(faArrowsAlt);\nlibrary.add(faEdit);\n\nconst {\n  number, array, func, string,\n} = PropTypes;\n\n\nconst ResponsiveGridLayout = WidthProvider(Responsive);\nconst Cell = styled.div`\n  // font-family: 'Gotham Medium';\n  font-size: 1.5em;\n  text-align: center;\n  padding: 2px;\n  overflow: hidden;\n`;\n\nconst RemoveBtn = styled.span`\n  position: absolute;\n  right: 6px;\n  top: 0;\n  cursor: pointer;\n  color: rgba(190,5,5,1);\n  opacity: 1;\n    transition: opacity .5s ease-in;\n\n  &:hover {\n    color: rgba(190,5,5,1);\n    opacity: 1\n  }\n`;\nconst ButtonContainer = styled.div`\n  positionx: ${({ editMode }) => (editMode ? 'static' : 'absolute')};\n  position: absolute;\n  left: 10px;\n  top: 10px;\n  display: flex;\n  flex-direction: ${({ editMode }) => (editMode ? 'column-reverse' : 'row')}; ;\n  background: ${({ editMode }) => (editMode ? 'rgba(0,0,0,.1)' : 'none')};\n  padding:  ${({ editMode }) => (editMode ? '20px' : '0')};\n  &> * {\n    margin: 5px;\n  }\n`;\n\nconst AppDiv = styled.div`\n  background: ${({ editMode }) => (editMode ? 'white' : 'black')};\n  color: ${({ editMode }) => (editMode ? 'black' : 'white')};\n\n`;\n\nconst showModal = {\n  addItem: () => (\n    <Modal title=\"Add Widget\">\n      <AddItem />\n    </Modal>\n  )\n  ,\n};\nconst WidgetCardStyle = styled.a`\n    display: block;\n    background-size: contain;\n    background-repeat: no-repeat;\n    pointer-events: ${({ editMode }) => (editMode ? 'none' : 'auto')};\n    text-decoration: none;\n    font-weight: bold;\n    color:  ${({ editMode }) => (editMode ? 'black' : 'white')};;\n\n`;\nconst WidgetCard = ({\n  i, widgetChoice, values, editMode,\n}) => {\n  const { url, logo, text } = values;\n\n  if (widgetChoice === 'choiceA') {\n    // const { text, url, logo } = values;\n    return (\n      <WidgetCardStyle\n        editMode={editMode}\n        href={url}\n        style={{\n          width: '100%',\n          height: '100%',\n          backgroundImage: `url(\"${logo}\")`,\n        }}\n      />\n    );\n  }\n  return (\n    <WidgetCardStyle\n      editMode={editMode}\n      href={url}\n      style={{\n        width: '100%',\n        height: '100%',\n        backgroundImage: `url(\"${logo}\")`,\n      }}\n    >\n      { logo ? '' : text}\n\n    </WidgetCardStyle>\n  );\n};\nclass App extends PureComponent {\n  static defaultProps = {\n    className: 'layout',\n    cols: {\n      lg: 12, md: 10, sm: 6, xs: 4, xxs: 2,\n    },\n    rowHeight: 100,\n    show: '',\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      editMode: false,\n    };\n  }\n\n  onRemove(i) {\n    const {\n      removeWidget,\n    } = this.props;\n    removeWidget(i);\n  }\n\n  render() {\n    const {\n      items, rowHeight, className, show, updateLayout,\n    } = this.props;\n    const { editMode } = this.state;\n\n    const Modal = showModal[show];\n    return (\n      <AppDiv className=\"App\" editMode={editMode}>\n        <h1>Tesla Screen</h1>\n\n        <ResponsiveGridLayout\n          className={className}\n          isResizable={editMode}\n          isDraggable={editMode}\n          onLayoutChange={layout => updateLayout(layout)}\n\n          breakpoints={{\n            lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0,\n          }}\n          cols={{\n            lg: 12, md: 10, sm: 6, xs: 4, xxs: 2,\n          }}\n          rowHeight={rowHeight}\n        >\n          {\n          items.map(el => (\n            <Cell key={el.i} data-grid={el}>\n              <Card bsStyle=\"primary\" style={{ background: 'rgba(0,0,0,0)' }}>\n                <CardBody>\n                  <WidgetCard editMode={editMode} {...el} />\n                </CardBody>\n              </Card>\n              { editMode && (\n              <RemoveBtn onClick={() => this.onRemove(el.i)}>\n                <FontAwesomeIcon icon=\"minus-circle\" size=\"xs\" />\n              </RemoveBtn>\n              )\n  }\n\n            </Cell>\n          ))\n        }\n\n          {/*\n         <Cell key=\"a\">Stock Ticker</Cell>\n          <Cell key=\"b\">Camera</Cell>\n          <Cell key=\"c\">Near By Events</Cell>\n          <Cell key=\"d\">Chat</Cell>\n          <Cell key=\"e\">Share your location</Cell>\n          <Cell key=\"f\">Favorite food near by</Cell>\n          <Cell key=\"g\">TODO List</Cell>\n          <Cell key=\"h\">Calculator</Cell>\n          */}\n\n        </ResponsiveGridLayout>\n        <Container fluid style={{ backgroundColor: 'rgba(0,0,0,0)', color: 'white', padding: '10px' }}>\n          <ButtonContainer editMode={editMode}>\n\n            { editMode && (\n            <Link to=\"/addItem\">\n              <Button>Add Widget</Button>\n            </Link>\n            )}\n\n            { !TheatreMode && editMode && (\n            <a href=\"https://www.youtube.com/redirect?q=http://teslascreen.navto.net/\">\n              <Button>Full Screen</Button>\n            </a>\n            )}\n            {!TheatreMode && !editMode && (\n            <a href=\"https://www.youtube.com/redirect?q=http://teslascreen.navto.net/\">\n\n              <Button>\n                <FontAwesomeIcon icon=\"arrows-alt\" size=\"xs\" />\n              </Button>\n            </a>\n            )}\n            <Button\n\n              onClick={() => {\n                this.setState({\n                  editMode: !editMode,\n                });\n              }}\n            >\n              {editMode ? 'Done' : <FontAwesomeIcon icon=\"edit\" size=\"xs\" /> }\n            </Button>\n\n          </ButtonContainer>\n        </Container>\n        {Modal && <Modal />}\n      </AppDiv>\n    );\n  }\n}\n\nApp.propTypes = {\n  // props\n  items: array.isRequired,\n  rowHeight: number,\n  className: string,\n  show: string,\n  // actions\n  removeWidget: func.isRequired,\n  updateLayout: func.isRequired,\n};\nconst mapStateToProps = state => getDashboard(state);\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  removeWidget,\n  updateLayout,\n}, dispatch);\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      /* eslint-disable */\n      registration.onupdatefound = () => {\n      /* eslint-enable */\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Route, Switch } from 'react-router'; // react-router v4\nimport { ConnectedRouter } from 'connected-react-router';\nimport configureStore, { history } from './store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render((\n  <Provider store={configureStore()}>\n    <ConnectedRouter history={history}>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" render={() => (<App />)} />\n          <Route exact path=\"/addItem\" render={() => (<App show=\"addItem\" />)} />\n          <Route render={() => (<App />)} />\n        </Switch>\n      </div>\n    </ConnectedRouter>\n\n  </Provider>), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}