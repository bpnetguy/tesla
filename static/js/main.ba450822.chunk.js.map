{"version":3,"sources":["reducers/dashboard.jsx","constants/index.jsx","reducers/root.jsx","store.jsx","actions/dashboard.jsx","selectors/dashboard.jsx","modal/index.jsx","widgets/text.jsx","containers/widgets.jsx","containers/AddItem.jsx","App.js","serviceWorker.js","index.js"],"names":["fromLocalStorage","JSON","parse","localStorage","getItem","items","map","item","Object","objectSpread","y","Infinity","err","initialState","newCounter","className","cols","lg","md","sm","xs","xxs","rowHeight","actionHandlers","_actionHandlers","defineProperty","state","_ref","payload","newState","toConsumableArray","concat","setItem","stringify","_ref2","i","filter","_ref3","layout","index","_layout$index","x","w","h","dashboard","arguments","length","undefined","action","actionHandler","type","root","history","combineReducers","router","connectRouter","form","formReducer","createBrowserHistory","addWidget","removeWidget","updateLayout","getDashboard","ClickableModal","_this$props","this","props","title","children","react_default","a","createElement","styled_bootstrap_components_lib","style","color","PureComponent","Text","defaultProps","grid-data","WidgetChoiceStyle","styled","div","_templateObject","Widget","_this$props$input","input","value","onChange","widgetsJSON","widgets","logo","text","url","id","event","arr","target","checked","push","splice","indexOf","includes","htmlFor","backgroundImage","Component","PropTypes","number","array","func","object","ButtonContainer","AddItem_templateObject","RadioContainer","_templateObject2","renderField","field","renderWidgetChoice","_field$input","_field$input$value","defaultChecked","v","Fragment","justifyContent","name","onClick","Field","component","Widgets","AddWidget","keys","values","_this","handleSubmit","fluid","e","console","log","primary","onAdd","Link","to","margin","connect","initialValues","widgetChoice","dispatch","bindActionCreators","reduxForm","withRouter","TheatreMode","document","referrer","match","library","add","faMinusCircle","faArrowsAlt","faEdit","string","ResponsiveGridLayout","WidthProvider","Responsive","Cell","App_templateObject","RemoveBtn","span","App_templateObject2","_templateObject3","editMode","AppDiv","_templateObject4","_ref4","_ref5","showModal","addItem","modal_ClickableModal","AddItem","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_this2","show","Modal","isResizable","isDraggable","onLayoutChange","breakpoints","el","key","data-grid","bsStyle","background","onRemove","react_fontawesome_index_es","icon","size","backgroundColor","padding","App_ButtonContainer","href","setState","Boolean","window","location","hostname","ReactDOM","render","es","store","createStore","rootReducer","compose","applyMiddleware","routerMiddleware","thunk","lib","Switch","Route","exact","path","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ba450822.chunk.js","sourcesContent":["import { ADD_WIDGET, REMOVE_WIDGET, UPDATE_LAYOUT } from '../constants';\n\nlet fromLocalStorage = {\n};\ntry {\n  fromLocalStorage = JSON.parse(localStorage.getItem('dashboard'));\n  fromLocalStorage.items = fromLocalStorage.items.map(item => ({\n    ...item,\n    y: item.y === null ? Infinity : item.y,\n  }));\n} catch (err) {\n  //\n}\n\nconst initialState = {\n  items: [],\n  newCounter: 0,\n  className: 'layout',\n  cols: {\n    lg: 12, md: 10, sm: 6, xs: 4, xxs: 2,\n  },\n  rowHeight: 100,\n  ...fromLocalStorage,\n};\nconst actionHandlers = {\n  [ADD_WIDGET]: (state, { payload }) => {\n    const { items, newCounter } = state;\n    const newState = {\n      ...state,\n      items: [...items, payload],\n      newCounter: newCounter + 1,\n    };\n    localStorage.setItem('dashboard', JSON.stringify(newState));\n    return newState;\n  },\n  [REMOVE_WIDGET]: (state, { payload: i }) => {\n    const { items } = state;\n    const newState = {\n      ...state,\n      items: items.filter(item => item.i !== i),\n    };\n    localStorage.setItem('dashboard', JSON.stringify(newState));\n    return newState;\n  },\n  [UPDATE_LAYOUT]: (state, { layout }) => {\n    const { items } = state;\n    const newState = {\n      ...state,\n      items: items.map((item, index) => {\n        const {\n          x, y, w, h,\n        } = layout[index];\n        return {\n          ...item,\n          x,\n          y,\n          w,\n          h,\n        };\n      }),\n    };\n    localStorage.setItem('dashboard', JSON.stringify(newState));\n    return newState;\n  },\n};\n\nexport default (state = initialState, action) => {\n  const actionHandler = actionHandlers[action.type];\n  if (actionHandler) {\n    return actionHandler(state, action);\n  }\n  return state;\n};\n","export const ADD_WIDGET = 'ADD_WIDGET';\nexport const REMOVE_WIDGET = 'REMOVE_WIDGET';\nexport const UPDATE_LAYOUT = 'UPDATE_LAYOUT';\n","\nimport { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport { reducer as formReducer } from 'redux-form';\n\nimport dashboard from './dashboard';\n\n\nexport default history => combineReducers({\n  router: connectRouter(history),\n  dashboard,\n  form: formReducer,\n});\n","import thunk from 'redux-thunk';\nimport { createBrowserHistory } from 'history';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport rootReducer from './reducers/root';\n\nexport const history = createBrowserHistory();\n\nconst initialState = {};\nexport default function configureStore() {\n  return createStore(\n    rootReducer(history),\n    initialState,\n    compose(\n      applyMiddleware(\n        routerMiddleware(history), // for dispatching history actions\n        thunk,\n      ),\n    ),\n  );\n}\n","import { ADD_WIDGET, REMOVE_WIDGET, UPDATE_LAYOUT } from '../constants';\n\nexport const addWidget = payload => ({\n  type: ADD_WIDGET,\n  payload,\n});\n\nexport const removeWidget = payload => ({\n  type: REMOVE_WIDGET,\n  payload,\n});\n\nexport const updateLayout = layout => ({\n  type: UPDATE_LAYOUT,\n  layout,\n});\n","// import { createSelector } from 'reselect';\n\nexport const getDashboard = state => state.dashboard;\nexport default getDashboard;\n","import React, { PureComponent } from 'react';\nimport {\n  Modal,\n  ModalDialog,\n  ModalContent,\n  ModalBody,\n  // ModalFooter,\n  ModalHeader,\n  ModalTitle,\n  // Button,\n  Container,\n} from 'styled-bootstrap-components';\n\nexport default class ClickableModal extends PureComponent {\n  render() {\n    const { title, children } = this.props;\n    return (\n      <Container>\n        <Modal>\n          <ModalDialog>\n            <ModalContent>\n              <ModalHeader>\n                <ModalTitle style={{ color: 'black' }}>\n                  {title}\n                </ModalTitle>\n                {/*\n                <Button outline onClick={() => this.handleModal()}>\n                  <span aria-hidden=\"true\">&times;</span>\n                </Button>\n                */}\n              </ModalHeader>\n              <ModalBody>\n                {children}\n              </ModalBody>\n              {/*\n              <ModalFooter>\n                <Button onClick={() => this.handleModal()}>\n                  Close\n                </Button>\n              </ModalFooter>\n              */}\n            </ModalContent>\n          </ModalDialog>\n        </Modal>\n      </Container>\n    );\n  }\n}\n","import React from 'react';\n\nexport const Text = ({ 'grid-data': { i } }) => (\n  <div>\nText\n    {i}\n  </div>\n);\nText.defaultProps = {\n  title: 'Text',\n  'grid-data': {},\n};\nText.propTypes = {\n  'grid-data': Object,\n};\nexport default Text;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport {\n  FormCheck,\n  FormCheckInput,\n} from 'styled-bootstrap-components';\nimport widgetsJSON from './widgets.json';\n\nconst WidgetChoiceStyle = styled.div`\n    & label > div {\n        display: flex;\n        align-items: center;\n        .imgContainer  {\n            width: 10vw;\n            height: 10vh;\n            background-size: contain;\n            background-repeat: no-repeat;\n            background-position: 50% 50%;\n            background-color: black;\n            img {\n                width: 100%;\n            }\n        }\n        .text {\n            margin-left: 10px;\n        }\n    }\n    & label > div:nth-of-type(odd) { \n        background: rgba(0,0,0,.2); \n        margin: 20px 0px;\n    } \n    & label > div:nth-of-type(even) { \n        background: rgba(0,0,0,.05); \n        margin: 20px 0px;\n    } \n    & input[type=\"checkbox\"] {\n        opacity: 0;\n        position: fixed;\n        width: 0;\n      \n      }\n    & input[type=\"checkbox\"]:checked + label {\n        background-color:rgba(0,0,255,.3);\n        background-color: #007bff;\n        border-color: #007bff;\n        color: white;\n      \n      }\n    & input[type=\"checkbox\"]:checked + label > div {\n        background-color:rgba(0,0,255,.3);\n        background-color: #007bff;\n        border-color: #007bff;\n        border-width: 5px;\n        border-style: solid;\n        color: white;\n      \n    }\n`;\nexport default class Widget extends Component {\n  render() {\n    const { input: { value, onChange } } = this.props;\n    return (\n      <WidgetChoiceStyle>\n        {widgetsJSON.widgets.map(({ logo, text, url }) => (\n          <FormCheck>\n            <FormCheckInput\n              type=\"checkbox\"\n              id={text}\n              onChange={(event) => {\n                const arr = [...value];\n                if (event.target.checked) {\n                  arr.push(text);\n                } else {\n                  arr.splice(arr.indexOf(text), 1);\n                }\n                return onChange(arr);\n              }}\n              checked={value.includes(text)}\n\n            />\n            <label htmlFor={text}>\n              <div>\n                <div className=\"imgContainer\" style={{ backgroundImage: `url(\"${logo}\")` }} />\n                <div className=\"text\">\n                  {text}\n                </div>\n              </div>\n            </label>\n          </FormCheck>\n        ))}\n      </WidgetChoiceStyle>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  FormGroup,\n  FormText,\n  FormInline,\n  FormCheck,\n  FormCheckInput,\n  Label,\n  FormControl,\n  Container,\n  Button,\n} from 'styled-bootstrap-components';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {\n  withRouter, Link,\n} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Field, reduxForm } from 'redux-form';\nimport * as widgets from '../widgets';\nimport { addWidget } from '../actions/dashboard';\nimport { getDashboard } from '../selectors/dashboard';\nimport SelectField from '../form/SelectField';\nimport Widgets from './widgets.jsx';\n\nconst {\n  number, array, func, object,\n} = PropTypes;\n\nconst ButtonContainer = styled.div`\n  &div {\n    margin: 10px;\n  }\n`;\nconst RadioContainer = styled.div`\n& input[type=\"radio\"] {\n  opacity: 0;\n  position: fixed;\n  width: 0;\n\n}\n& input[type=\"radio\"] + label {\n  padding: 10px;\n}\n\n& input[type=\"radio\"]:checked + label {\n  background-color:rgba(0,0,255,.3);\n  background-color: #007bff;\n  border-color: #007bff;\n  color: white;\n\n}\n& form > div {\n  margin: 10px 0px;\n}\n`;\nconst renderField = field => (\n  <div className=\"input-row\">\n    <FormControl\n\n      {...field.input}\n    />\n\n  </div>\n);\n\nconst renderWidgetChoice = (field) => {\n  const { input: { value = 'choiceB', onChange }, defaultChecked } = field;\n  const v = value || defaultChecked;\n  return (\n    <>\n      <RadioContainer>\n        <FormInline style={{ color: 'black', justifyContent: 'space-around' }}>\n          <FormGroup>\n            <FormCheck>\n              <FormCheckInput\n                id=\"choiceA\"\n                type=\"radio\"\n                name=\"selectType\"\n                onClick={() => {\n                  onChange('choiceA');\n                }}\n                checked={v === 'choiceA'}\n              />\n              <label htmlFor=\"choiceA\">Choose A Widget</label>\n            </FormCheck>\n          </FormGroup>\n          <FormGroup>\n            <FormCheck>\n              <FormCheckInput\n                id=\"choiceB\"\n                type=\"radio\"\n                name=\"selectType\"\n                checked={v === 'choiceB'}\n                onClick={() => {\n                  onChange('choiceB');\n                }}\n              />\n              <label htmlFor=\"choiceB\">Custom Widget</label>\n            </FormCheck>\n          </FormGroup>\n        </FormInline>\n      </RadioContainer>\n      { value === 'choiceB' && <>\n        <FormGroup>\n          <Label>Name</Label>\n          <Field name=\"name\" component={renderField} type=\"text\" />\n        </FormGroup>\n        <FormGroup>\n          <Label>Logo</Label>\n          <Field name=\"logo\" component={renderField} type=\"text\" />\n        </FormGroup>\n        <FormGroup>\n          <Label>URL</Label>\n          <Field name=\"url\" component={renderField} type=\"text\" />\n        </FormGroup>\n          </>}\n      {value === 'choiceA' && <>        <Field name=\"choiceAWidgets\" component={Widgets} type=\"checkbox\" /></>}\n          </>\n\n  );\n};\nconst widgetTypes = Object.keys(widgets);\nclass AddWidget extends Component {\n  static defaultProps = {\n\n  };\n\n  onAdd(values) {\n    // TODO: show modal?c\n    const {\n      newCounter, items, addWidget, history,\n    } = this.props;\n    addWidget({\n      i: `n${newCounter}`,\n      x: (items.length * 2) % (12),\n      y: Infinity, // puts it at the bottom\n      w: 2,\n      h: 2,\n      values,\n    });\n    history.push('/');\n  }\n\n\n  render() {\n    const { handleSubmit } = this.props;\n    return (\n      <Container fluid style={{ color: 'black' }}>\n        {/*\n        <FormGroup>\n          <Label>Widget Type</Label>\n          <Field\n            name=\"widgetType\"\n            component={SelectField}\n            options={[\n              'Select Type',\n              ...widgetTypes,\n            ]}\n          />\n        </FormGroup>\n        */}\n        <Field name=\"widgetChoice\" component={renderWidgetChoice} onChange={e => console.log(e)} />\n\n        <ButtonContainer>\n          <Button primary onClick={handleSubmit(values => this.onAdd(values))}>Add</Button>\n          <Link to=\"/\">\n            <Button primary style={{ margin: 10 }}>Cancel</Button>\n          </Link>\n        </ButtonContainer>\n\n      </Container>\n    );\n  }\n}\n\nAddWidget.propTypes = {\n  newCounter: number.isRequired,\n  items: array.isRequired,\n  addWidget: func.isRequired,\n  handleSubmit: func.isRequired,\n  history: object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  ...getDashboard(state),\n  initialValues: {\n    widgetChoice: 'choiceA',\n  },\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  addWidget,\n}, dispatch);\nexport default connect(mapStateToProps, mapDispatchToProps)(reduxForm({\n  form: 'addWidget',\n})(withRouter(AddWidget)));\n","import { Responsive, WidthProvider } from 'react-grid-layout';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport React, { PureComponent } from 'react';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMinusCircle, faArrowsAlt, faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\n\nimport {\n  Card,\n  CardBody,\n  // CardFooter,\n  // CardHeader,\n  // CardImageHeader,\n  // CardText,\n  CardTitle,\n  Button,\n  Container,\n} from 'styled-bootstrap-components';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { removeWidget, updateLayout } from './actions/dashboard';\nimport './App.css';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport { getDashboard } from './selectors/dashboard';\nimport Modal from './modal';\nimport AddItem from './containers/AddItem';\n\nlet TheatreMode = false;\n\nif (document.referrer.match(/^https:\\/\\/www\\.youtube\\.com/)) {\n  TheatreMode = true;\n}\n\nlibrary.add(faMinusCircle);\nlibrary.add(faArrowsAlt);\nlibrary.add(faEdit);\n\nconst {\n  number, array, func, string,\n} = PropTypes;\n\n\nconst ResponsiveGridLayout = WidthProvider(Responsive);\nconst Cell = styled.div`\n  font-family: 'Gotham Medium';\n  font-size: 1.5em;\n  text-align: center;\n  padding: 2px;\n  overflow: hidden;\n`;\n\nconst RemoveBtn = styled.span`\n  position: absolute;\n  right: 6px;\n  top: 0;\n  cursor: pointer;\n  color: rgba(190,5,5,1);\n  opacity: .1;\n    transition: opacity .5s ease-in;\n\n  &:hover {\n    color: rgba(190,5,5,1);\n    opacity: 1\n  }\n`;\nconst ButtonContainer = styled.div`\n  positionx: ${({ editMode }) => (editMode ? 'static' : 'absolute')};\n  position: absolute;\n  left: 10px;\n  top: 10px;\n  display: flex;\n  flex-direction: column-reverse;\n  background: ${({ editMode }) => (editMode ? 'rgba(0,0,0,.1)' : 'none')};\n  padding:  ${({ editMode }) => (editMode ? '20px' : '0')};\n  &> * {\n    margin: 5px;\n  }\n`;\n\nconst AppDiv = styled.div`\n  background: ${({ editMode }) => (editMode ? 'white' : 'black')};\n  color: ${({ editMode }) => (editMode ? 'black' : 'white')};\n\n`;\n\nconst showModal = {\n  addItem: () => (\n    <Modal title=\"Add Widget\">\n      <AddItem />\n    </Modal>\n  )\n  ,\n};\nclass App extends PureComponent {\n  static defaultProps = {\n    className: 'layout',\n    cols: {\n      lg: 12, md: 10, sm: 6, xs: 4, xxs: 2,\n    },\n    rowHeight: 100,\n    show: '',\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      editMode: false,\n    };\n  }\n\n  onRemove(i) {\n    const {\n      removeWidget,\n    } = this.props;\n    removeWidget(i);\n  }\n\n  render() {\n    const {\n      items, rowHeight, className, show, updateLayout,\n    } = this.props;\n    const { editMode } = this.state;\n\n    const Modal = showModal[show];\n    return (\n      <AppDiv className=\"App\" editMode={editMode}>\n        <h1>Tesla Screen</h1>\n\n        <ResponsiveGridLayout\n          className={className}\n          isResizable={editMode}\n          isDraggable={editMode}\n          onLayoutChange={layout => updateLayout(layout)}\n\n          breakpoints={{\n            lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0,\n          }}\n          cols={{\n            lg: 12, md: 10, sm: 6, xs: 4, xxs: 2,\n          }}\n          rowHeight={rowHeight}\n        >\n          {\n          items.map(el => (\n            <Cell key={el.i} data-grid={el}>\n              <Card bsStyle=\"primary\" style={{ background: 'rgba(0,0,0,0)' }}>\n                <CardBody>\n                  <CardTitle>{el.i}</CardTitle>\n                </CardBody>\n              </Card>\n              { editMode && (\n              <RemoveBtn onClick={() => this.onRemove(el.i)}>\n                <FontAwesomeIcon icon=\"minus-circle\" size=\"xs\" />\n              </RemoveBtn>\n              )\n  }\n\n            </Cell>\n          ))\n        }\n\n          {/*\n         <Cell key=\"a\">Stock Ticker</Cell>\n          <Cell key=\"b\">Camera</Cell>\n          <Cell key=\"c\">Near By Events</Cell>\n          <Cell key=\"d\">Chat</Cell>\n          <Cell key=\"e\">Share your location</Cell>\n          <Cell key=\"f\">Favorite food near by</Cell>\n          <Cell key=\"g\">TODO List</Cell>\n          <Cell key=\"h\">Calculator</Cell>\n          */}\n\n        </ResponsiveGridLayout>\n        <Container fluid style={{ backgroundColor: 'rgba(0,0,0,0)', color: 'white', padding: '10px' }}>\n          <ButtonContainer editMode={editMode}>\n\n            { editMode && (\n            <Link to=\"/addItem\">\n              <Button>Add Widget</Button>\n            </Link>\n            )}\n\n            { !TheatreMode && editMode && (\n            <a href=\"https://www.youtube.com/redirect?q=http://teslascreen.navto.net/\">\n              <Button>Full Screen</Button>\n            </a>\n            )}\n            <Button\n\n              onClick={() => {\n                this.setState({\n                  editMode: !editMode,\n                });\n              }}\n            >\n              {editMode ? 'Done' : <FontAwesomeIcon icon=\"edit\" size=\"xs\" /> }\n            </Button>\n          </ButtonContainer>\n        </Container>\n        {Modal && <Modal />}\n      </AppDiv>\n    );\n  }\n}\n\nApp.propTypes = {\n  // props\n  items: array.isRequired,\n  rowHeight: number,\n  className: string,\n  show: string,\n  // actions\n  removeWidget: func.isRequired,\n  updateLayout: func.isRequired,\n};\nconst mapStateToProps = state => getDashboard(state);\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  removeWidget,\n  updateLayout,\n}, dispatch);\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      /* eslint-disable */\n      registration.onupdatefound = () => {\n      /* eslint-enable */\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Route, Switch } from 'react-router'; // react-router v4\nimport { ConnectedRouter } from 'connected-react-router';\nimport configureStore, { history } from './store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render((\n  <Provider store={configureStore()}>\n    <ConnectedRouter history={history}>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" render={() => (<App />)} />\n          <Route exact path=\"/addItem\" render={() => (<App show=\"addItem\" />)} />\n          <Route render={() => (<App />)} />\n        </Switch>\n      </div>\n    </ConnectedRouter>\n\n  </Provider>), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}